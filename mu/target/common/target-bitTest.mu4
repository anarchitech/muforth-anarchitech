( Copyright 2000-2021 Anarchitech, BSD License, you know the drill )

loading Bit Tests
__meta

hex
ram

( Bit tests -- is it set or not? )

( Useage #n, where n = bit position starting at 0 to test )

: bit? 1 swap << and 0= if 0 else 1 then ;

( Shorthand. ?bx-y leaves the result of 4 tests on stack, hi -> lo )

: ?b0 #0 bit? ;
: ?b1 #1 bit? ;
: ?b2 #2 bit? ;
: ?b3 #3 bit? ;
: ?b3-0 dup ?b3 swap dup ?b2 swap dup ?b1 swap ?b0 ;

: ?b4 #4 bit? ;
: ?b5 #5 bit? ;
: ?b6 #6 bit? ;
: ?b7 #7 bit? ;
: ?b7-4 dup ?b7 swap dup ?b6 swap dup ?b5 swap ?b4 ;

: ?b8 #8 bit? ;
: ?b9 #9 bit? ;
: ?b10 #10 bit? ;
: ?b11 #11 bit? ;
: ?b11-8 dup ?b11 swap dup ?b10 swap dup ?b9 swap ?b8 ;

: ?b12 #12 bit? ;
: ?b13 #13 bit? ;
: ?b14 #14 bit? ;
: ?b15 #15 bit? ;
: ?b15-12 dup ?b15 swap dup ?b14 swap dup ?b13 swap ?b12 ;

: ?b16 #16 bit? ;
: ?b17 #17 bit? ;
: ?b18 #18 bit? ;
: ?b19 #19 bit? ;
: ?b19-16 dup ?b19 swap dup ?b18 swap dup ?b17 swap ?b16 ;

: ?b20 #20 bit? ;
: ?b21 #21 bit? ;
: ?b22 #22 bit? ;
: ?b23 #23 bit? ;
: ?b23-20 dup ?b23 swap dup ?b22 swap dup ?b21 swap ?b20 ;

: ?b24 #24 bit? ;
: ?b25 #25 bit? ;
: ?b26 #26 bit? ;
: ?b27 #27 bit? ;
: ?b27-24 dup ?b27 swap dup ?b26 swap dup ?b25 swap ?b24 ;

: ?b28 #28 bit? ;
: ?b29 #29 bit? ;
: ?b30 #30 bit? ;
: ?b31 #31 bit? ;
: ?b31-28 dup ?b31 swap dup ?b30 swap dup ?b29 swap ?b28 ;

: 4drop 4 0 do drop loop ;

comment STACKWEED

A dirt simple list of definitions for finding the value of one bit or a
group of 4.  Generally you find you need something like this while
you're whacking away with a reference/programming manual open in one
terminal squinting at register fields while you try to figure out why
things are going splat.

We thought it might be useful to include an allbits word, but that
doesn't really work with the 4 element stack display.  Far easier to
break it up into chunks.

STACKWEED
