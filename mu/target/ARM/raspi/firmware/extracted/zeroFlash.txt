#################################################
Sun Nov 21 23:25:22 PST 2021
OpenBSD 7.0
GENERIC.MP#299 i386
#################################################

Maybe you know this, maybe you don't.

Embedded ARM always has a copy of flash starting at address 0.  You can always
dump from 0.

We can't yet @flash du, but my goodness, who cares.  0 du works just
fine.  You can du to about 1fe0; if you go further, you segfault and
drop a core for Reasons.

cd muforth/mu
./muforth -f target/ARM/board/rasberry-pi-pico.mu4
pico
0 1fe0 read-image
save-image pico-zero.img
bye

Then do whatever the hell you want with it; strings, hexdump, radare:

r2 -a arm -m 0x0 -b 16 pico-zero.img

Go. To. Town.

Travis Goodspeed has a fun talk about RE'ing ARM firmware:

BalCCon2k16 - Travis Goodspeed - Nifty Tricks for ARM Firmware Reverse
Engineering
https://youtube.com/watch?v=GX8-K4TssjY
