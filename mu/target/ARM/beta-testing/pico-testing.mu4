-- load ARM/common/target-bitTest.mu4 first!

comment SPAM

     This is unfinished test code! Use at your own risk!
     There are examples that work and ones that break. If they break
     they're commented out.

SPAM

__meta
hex
ram

( init-spi should be changed to spi-init, imho )
: spi-init init-spi ;
: gpioclk_enabled? RESETS_RESET @ ?b8 ;
: gpioclk-init 0 RESETS_RESET ! ;
: w for next ;

( IO_BANK0_GPIOxx_STATUS )

-- Testing!

comment SPAM

     bgstat@, bgctrl@ and bgctrl! are all used for **testing** 
     while developing; the existing register names are ugly and complex
     and I didn't want to keep looking the damn things up or type them
     out.  These words break if you attempt to use them in the definitions
     below, this is why the -beta definitions below are commented out.
     If you want to see the breakage (it hangs) just type:

        gpioclk-init
        init-b0g25-beta <---- hangs

SPAM

( Useage: #29 bgstat@/bgctrl@ == IO_BANK0_GPIO29_STATUS/CTRL @ )
(       5 #25 bgctrl! == 5 IO_BANK0_GPIO25_CTRL ! )

: bgstat@ 4001_4000 swap dup 0= if 
     else 0 do 8 + loop dup @ then drop dup @ ;

: bgctrl@ 4001_4004 swap dup 0= if
          else 0 do 8 + loop dup @ then drop dup @ ;

: bgctrl! 4001_4004 swap dup 0= if
          else 0 do 8 + loop ! then drop ! ;

-- Working!

( leds )
: init-b0g25 5 IO_BANK0_GPIO25_CTRL ! ;
-- : init-b0g25-beta 5 #25 bgctrl! ;
-- : led-init-beta gpioclk-init init-b0g25-beta 1 #25 << SIO_GPIO_OE_SET ! ; 
: led-init gpioclk-init
           init-b0g25 
           1 #25 << SIO_GPIO_OE_SET ! ; 
: led-on 1 #25 << SIO_GPIO_OUT_SET ! ;  
: led-off 1 #25 << SIO_GPIO_OUT_CLR ! ; 
: led-toggle 1 #25 << SIO_GPIO_OUT_XOR ! ;
-- : blinken-beta led-init-beta 
--               10 0 do led-toggle 100000 w led-toggle 100000 w loop ;
: blinken led-init 10 0 do led-toggle 100000 w led-toggle 100000 w loop ;
